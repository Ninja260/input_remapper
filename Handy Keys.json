[
    {
        "input_combination": [
            {
                "type": 1,
                "code": 58,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            },
            {
                "type": 1,
                "code": 37,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            }
        ],
        "target_uinput": "keyboard",
        "output_symbol": "# Default, VIM: Fix format problem\nif_eq(\n\t$mode,\n\tNone,\n\tkey(Escape)\n\t.key(j).\n\trepeat(2, modify(Shift_L,key(comma)))\n\t.key(k)\n\t.repeat(2, key(d))\n\t.key(k)\n\t.modify(Shift_R, key(4))\n\t.key(a)\n\t.key(Return)\n)\n# Alacritty, Jump to Up pane\n.if_eq(\n\t$mode,\n\t1,\n\tmodify(Alt_L, key(KEY_UP))\n)\n# Lazy Window, Expend height\n.if_eq(\n\t$mode,\n\t2,\n\tkey(5).key(space).key(w).modify(Shift_L, key(equal))\n)",
        "name": "",
        "mapping_type": "key_macro"
    },
    {
        "input_combination": [
            {
                "type": 1,
                "code": 58,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            },
            {
                "type": 1,
                "code": 36,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            }
        ],
        "target_uinput": "keyboard",
        "output_symbol": "# Default, Toggle first work space and second work space\nif_eq(\n\t$mode,\n\tNone,\n\tset(space3active, 0)\n\t.if_eq(\n\t\t$space,\n\t\t2,\n\t\tset(space, 1).modify(Super_L, key(1)),\n\t\tset(space, 2).modify(Super_L, key(2))\n\t)\n)\n# Alacritty, Jump to down pane\n.if_eq(\n\t$mode,\n\t1,\n\tmodify(Alt_L, key(KEY_DOWN))\n)\n# Lazy Window, Shrink height\n.if_eq(\n\t$mode,\n\t2,\n\tkey(5).key(space).key(w).key(minus)\n)",
        "name": "",
        "mapping_type": "key_macro"
    },
    {
        "input_combination": [
            {
                "type": 1,
                "code": 58,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            }
        ],
        "target_uinput": "keyboard",
        "output_symbol": "disable",
        "name": "Disable Capslock",
        "mapping_type": "key_macro"
    },
    {
        "input_combination": [
            {
                "type": 1,
                "code": 58,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            },
            {
                "type": 1,
                "code": 38,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            }
        ],
        "target_uinput": "keyboard",
        "output_symbol": "# Default, VIM: Echo current file full name with path\nif_eq(\n\t$mode,\n\tNone,\n\tmodify(Shift_L, key(semicolon))\n\t.key(e).key(c).key(h).key(o)\n\t.key(space)\n\t.modify(Shift_L, key(2)).modify(Shift_L, key(5))\n\t.key(Return)\n)\n# Alacritty, Jump to left pane\n.if_eq(\n\t$mode,\n\t1,\n\tmodify(Alt_L, key(KEY_RIGHT))\n)",
        "name": "",
        "mapping_type": "key_macro"
    },
    {
        "input_combination": [
            {
                "type": 1,
                "code": 58,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            },
            {
                "type": 1,
                "code": 21,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            }
        ],
        "target_uinput": "keyboard",
        "output_symbol": "# Default, VIM: Scroll half up\nif_eq(\n\t$mode,\n\tNone,\n\tmodify(Control_L, key(u))\n)",
        "name": "",
        "mapping_type": "key_macro"
    },
    {
        "input_combination": [
            {
                "type": 1,
                "code": 58,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            },
            {
                "type": 1,
                "code": 35,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            }
        ],
        "target_uinput": "keyboard",
        "output_symbol": "# Default, VIM: Scroll half down\nif_eq(\n\t$mode,\n\tNone,\n\tmodify(Control_L, key(d))\n)\n# Alacritty, Jump to left pane\n.if_eq(\n\t$mode,\n\t1,\n\tmodify(Alt_L, key(KEY_LEFT))\n)",
        "name": "",
        "mapping_type": "key_macro"
    },
    {
        "input_combination": [
            {
                "type": 1,
                "code": 58,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            },
            {
                "type": 1,
                "code": 24,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            }
        ],
        "target_uinput": "keyboard",
        "output_symbol": "# Default, VIM: Jump to old cursor position\nif_eq(\n\t$mode,\n\tNone,\n\tmodify(Control_L, key(o))\n)\n# Alacritty, Open a new pane in vertical split\n.if_eq(\n\t$mode,\n\t1,\n\tmodify(Control_L, key(p)).key(r)\n)\n# Lazy Window, Vertical split\n.if_eq(\n\t$mode,\n\t2,\n\tkey(space).key(w).key(v)\n)",
        "name": "",
        "mapping_type": "key_macro"
    },
    {
        "input_combination": [
            {
                "type": 1,
                "code": 58,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            },
            {
                "type": 1,
                "code": 23,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            }
        ],
        "target_uinput": "keyboard",
        "output_symbol": "# Default, VIM: Jump to newer cursor position\nif_eq(\n\t$mode,\n\tNone,\n\tmodify(Control_L, key(i))\n)\n# Alacritty, Open a new pane in horizontal split\n.if_eq(\n\t$mode,\n\t1,\n\tmodify(Control_L, key(p)).key(d)\n)\n# Lazy Window, Horizontal split\n.if_eq(\n\t$mode,\n\t2,\n\tkey(space).key(w).key(s)\n)",
        "name": "",
        "mapping_type": "key_macro"
    },
    {
        "input_combination": [
            {
                "type": 1,
                "code": 58,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            },
            {
                "type": 1,
                "code": 50,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            }
        ],
        "target_uinput": "keyboard",
        "output_symbol": "# Default, VIM: Reload Flutter app\nif_eq(\n\t$mode,\n\tNone,\n\tmodify(Shift_L, key(semicolon))\n\t.modify(Shift_L, key(f)).key(l).key(u).key(t).key(t).key(e).key(r)\n\t.modify(Shift_L, key(r)).key(e).key(l).key(o).key(a).key(d)\n\t.key(Return)\n)\n# Alacritty, Rename current tab\n.if_eq(\n\t$mode,\n\t1,\n\tmodify(Control_L, key(t)).key(r)\n)",
        "name": "",
        "mapping_type": "key_macro"
    },
    {
        "input_combination": [
            {
                "type": 1,
                "code": 58,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            },
            {
                "type": 1,
                "code": 49,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            }
        ],
        "target_uinput": "keyboard",
        "output_symbol": "# Default, VIM: Restart Flutter App\nif_eq(\n\t$mode,\n\tNone,\n\tmodify(Shift_L, key(semicolon))\n\t.modify(Shift_L, key(f)).key(l).key(u).key(t).key(t).key(e).key(r)\n\t.modify(Shift_L, key(r)).key(e).key(s).key(t).key(a).key(r).key(t)\n\t.key(Return)\n)\n# Alacritty, Create new tab\n.if_eq(\n\t$mode,\n\t1,\n\tmodify(Control_L, key(t)).key(n)\n)",
        "name": "",
        "mapping_type": "key_macro"
    },
    {
        "input_combination": [
            {
                "type": 1,
                "code": 58,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            },
            {
                "type": 1,
                "code": 51,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            }
        ],
        "target_uinput": "keyboard",
        "output_symbol": "# Default, VIM: Save file\nif_eq(\n\t$mode,\n\tNone,\n\tmodify(Shift_L, key(semicolon))\n\t.key(w)\n\t.key(Return)\n)\n# Alacritty, Shrink current pane\n.if_eq(\n\t$mode,\n\t1,\n\tmodify(Alt_L, key(minus))\n)\n# Lazy Window, Shrink width\n.if_eq(\n\t$mode,\n\t2,\n\tkey(5).key(space).key(w).modify(Shift_L, key(comma))\n)",
        "name": "",
        "mapping_type": "key_macro"
    },
    {
        "input_combination": [
            {
                "type": 1,
                "code": 58,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            },
            {
                "type": 1,
                "code": 39,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            }
        ],
        "target_uinput": "keyboard",
        "output_symbol": "# Default, Toggle thrid workspace and recent workspace\nif_eq(\n\t$mode,\n\tNone,\n\tif_eq($space, None, set(space, 1))\n\t.if_eq(\n\t\t$space3active,\n\t\t1,\n\t\tset(space3active, 0).modify(Super_L, key($space)),\n\t\tset(space3active, 1).modify(Super_L, key(3))\n\t)\n)\n# Alacritty, close currente pane\n.if_eq(\n\t$mode,\n\t1,\n\tmodify(Control_L, key(t)).key(x)\n)",
        "name": "",
        "mapping_type": "key_macro"
    },
    {
        "input_combination": [
            {
                "type": 1,
                "code": 58,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            },
            {
                "type": 1,
                "code": 25,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            }
        ],
        "target_uinput": "keyboard",
        "output_symbol": "# Default, Trigger Ctrl + p\nif_eq(\n\t$mode,\n\tNone,\n\tmodify(Control_L,key(p))\n)\n# Alacritty, Toggle pop-up terminal\n.if_eq(\n\t$mode,\n\t1,\n\tmodify(Control_L, key(p)).key(w)\n)",
        "name": "",
        "mapping_type": "key_macro"
    },
    {
        "input_combination": [
            {
                "type": 1,
                "code": 58,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            },
            {
                "type": 1,
                "code": 22,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            }
        ],
        "target_uinput": "keyboard",
        "output_symbol": "# Default, Trigger Ctrl + n\nif_eq(\n\t$mode,\n\tNone, \n\tmodify(Control_L, key(n))\n)\n# Alacritty, Trigger Alacrity Lock\n.if_eq(\n\t$mode,\n\t1,\n\tmodify(Control_L, key(g))\n)",
        "name": "",
        "mapping_type": "key_macro"
    },
    {
        "input_combination": [
            {
                "type": 1,
                "code": 58,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            },
            {
                "type": 1,
                "code": 52,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            }
        ],
        "target_uinput": "keyboard",
        "output_symbol": "# Default, backtick\nif_eq(\n\t$mode,\n\tNone,\n\tkey(grave)\n)\n# Alacritty, Expend current pane\n.if_eq(\n\t$mode,\n\t1,\n\tmodify(Alt_L, key(equal))\n)\n# Lazy Window, Shrink width\n.if_eq(\n\t$mode,\n\t2,\n\tkey(5).key(space).key(w).modify(Shift_L, key(period))\n)",
        "mapping_type": "key_macro"
    },
    {
        "input_combination": [
            {
                "type": 1,
                "code": 58,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            },
            {
                "type": 1,
                "code": 10,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            }
        ],
        "target_uinput": "keyboard",
        "output_symbol": "if_eq($mode,None, set(rmode, None))\n.if_eq($mode,1, set(rmode, 1))\n.if_eq($mode,2, set(rmode, 2))\n.set(mode, 2)",
        "name": "Mode: Lazy Window",
        "mapping_type": "key_macro"
    },
    {
        "input_combination": [
            {
                "type": 1,
                "code": 58,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            },
            {
                "type": 1,
                "code": 9,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            }
        ],
        "target_uinput": "keyboard",
        "output_symbol": "if_eq($mode,None, set(rmode, None))\n.if_eq($mode,1, set(rmode, 1))\n.if_eq($mode,2, set(rmode, 2))\n.set(mode, 1)",
        "name": "Mode: Alacritty",
        "mapping_type": "key_macro"
    },
    {
        "input_combination": [
            {
                "type": 1,
                "code": 58,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            },
            {
                "type": 1,
                "code": 8,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            }
        ],
        "target_uinput": "keyboard",
        "output_symbol": "if_eq($mode,None, set(rmode, None))\n.if_eq($mode,1, set(rmode, 1))\n.if_eq($mode,2, set(rmode, 2))\n.set(mode, None)",
        "name": "Mode: Default",
        "mapping_type": "key_macro"
    },
    {
        "input_combination": [
            {
                "type": 1,
                "code": 58,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            },
            {
                "type": 1,
                "code": 33,
                "origin_hash": "650869084d234c8ce49bb632f09ccf3e"
            }
        ],
        "target_uinput": "keyboard",
        "output_symbol": "if_eq($rmode, None, set(tmode, None))\n.if_eq($rmode, 1, set(tmode, 1))\n.if_eq($rmode, 2, set(tmode, 2))\n.if_eq($mode, None, set(rmode, None))\n.if_eq($mode, 1, set(rmode, 1))\n.if_eq($mode, 2, set(rmode, 2))\n.if_eq($tmode, None, set(mode, None))\n.if_eq($tmode, 1, set(mode, 1))\n.if_eq($tmode, 2, set(mode, 2))",
        "name": "Toggle recent mode",
        "mapping_type": "key_macro"
    }
]
